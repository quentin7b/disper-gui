#!/usr/bin/env python
# Copyright 2012, Klein Quentin
# This content is released under the MIT License.

import pygtk
pygtk.require('2.0')
import gtk
from subprocess import call

# Contains the window and all the gtk components
class dualScreenWindow :

	# Called when a click on the "cross" is performed
	def delete_event(self, widget, event, data=None):
		gtk.main_quit()
		return False

	# Called when a click on "Use primary screen only" is performed
	def disconnect_screen(self, widget):
		call(["disper", "-s"])
		print "disconnect second screen"
		return True

	# Called when a click on "Duplicate screen" is performed
	def duplicate_screen(self, widget):
		call(["disper", "-c"])
		print "duplicate on second screen"
		return True

	# Called when a click on "Use both screens" is performed
	def extend_screen(self, widget):
		call(["disper", "-e", "-t", "right"])
		print "extend on second screen"
		return True

	# Called when a click on "Use secondary screen only" is performed
	def translate_screen(self, widget):
		call(["disper", "-S"])
		print "translate on second screen"
		return True

	# Called at the begining of the prog to create the window
	def create_window(self):
		self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
		self.window.set_title("Dual Screen Manager")
		self.window.set_border_width(15)
		self.window.connect("delete_event", self.delete_event)
		self.packing_box = gtk.HBox(True, 5) # Setting the window container 
		self.window.add(self.packing_box)
		
	# Called after create_window, fill it
	def create_content(self):
		# Let's make the buttons
		self.disconnect_button = gtk.Button()
		self.duplicate_button = gtk.Button()
		self.extend_button = gtk.Button()
		self.translate_button = gtk.Button()
		# And use some icons (cf ReadeMe for License)
		disconnect_image = gtk.Image()
		disconnect_image.set_from_file("/usr/share/dual-screen-manager/laptop.png")
		duplicate_image = gtk.Image()
		duplicate_image.set_from_file("/usr/share/dual-screen-manager/duplicate.png")
		extend_image = gtk.Image()
		extend_image.set_from_file("/usr/share/dual-screen-manager/extend.png")
		translate_image = gtk.Image()
		translate_image.set_from_file("/usr/share/dual-screen-manager/desktop.png")
		# To be understandable, we need a Label
		disconnect_label = gtk.Label("Use primary screen only")
		duplicate_label = gtk.Label("Duplicate screens")
		extend_label = gtk.Label("Use both screens")
		translate_label = gtk.Label("Use secondary screen only")
		# To be beautiful, they need a layout
		disconnect_box = gtk.VBox(False, 2)
		duplicate_box = gtk.VBox(False, 2)
		extend_box = gtk.VBox(False, 2)
		translate_box = gtk.VBox(False, 2)
		self.disconnect_button.add(disconnect_box)
		self.duplicate_button.add(duplicate_box)
		self.extend_button.add(extend_box)
		self.translate_button.add(translate_box)
		# Adding the contents to our layout boxes
		disconnect_box.pack_start(disconnect_label, True, True, 0)
		disconnect_label.show()
		disconnect_box.pack_end(disconnect_image, True, True, 0)
		disconnect_image.show()
		duplicate_box.pack_start(duplicate_label, True, True, 0)
		duplicate_label.show()
		duplicate_box.pack_end(duplicate_image, True, True, 0)
		duplicate_image.show()
		extend_box.pack_start(extend_label, True, True, 0)
		extend_label.show()
		extend_box.pack_end(extend_image, True, True, 0)
		extend_image.show()
		translate_box.pack_start(translate_label, True, True, 0)
		translate_label.show()
		translate_box.pack_end(translate_image, True, True, 0)
		translate_image.show()
		# Make our boxes visible
		disconnect_box.show()
		duplicate_box.show()
		extend_box.show()
		translate_box.show()
		# Finaly, to be usefull, they need some actions to do 
		self.disconnect_button.connect("clicked", self.disconnect_screen)
		self.duplicate_button.connect("clicked", self.duplicate_screen)
		self.extend_button.connect("clicked", self.extend_screen)
		self.translate_button.connect("clicked", self.translate_screen)
		# Let's add our buttons to our window box
		self.packing_box.pack_start(self.disconnect_button, True, True, 0)
		self.packing_box.pack_start(self.duplicate_button, True, True, 0)
		self.packing_box.pack_start(self.extend_button, True, True, 0)
		self.packing_box.pack_end(self.translate_button, True, True, 0)
		# And make them visible
		self.disconnect_button.show()
		self.duplicate_button.show()
		self.extend_button.show()
		self.translate_button.show()

	# Called after create_content and display everything
	def show_window(self):
		self.packing_box.show()
		self.window.show()

	# Create our window, fill it and display it
	def __init__(self):
		self.create_window()
		self.create_content()
		self.show_window()

def main():
	gtk.main()

if __name__ == "__main__":
	dualScreenApplication = dualScreenWindow()
	main()
